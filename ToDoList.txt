
I think the key to doing this right will be properly laying out how the models (database) should work

The things I want to hold 
	1. Summoner Account Information
	2. Summoner Ranked Information
	3. Summoner's match history
	4. Summoner's matches
	5. Summoner's mastery scores
	6. Currently in game? Dunno

The biggest issue I have is that I don't know the 'proper' way to handle this
Lotta breakdowns could be done
	So 
		1. Summoner - Things from the summoner by summoner name API (one table, each entry is a unique summoner)
		2. Summoner Ranked Info - Things from the league entries for user (one table, each entry is one queue_type, summoners can have multiple entries)
		3. Match History - I honestly don't know - this is just a list of game_ids associated with a summoner name
			I suppose this doesn't need to be held? This would just be called to add more matches to the database
		4. Summoner's Matches - Holds the match info - would be massive, matches can overlap with users - would have to check if the match is already there
		5. Champion mastery scores - a table with sumId, allchamps, then a score 

	Some of these will be massive classes and massive tables - I guess I'm not fully with it because I genuinely have no frame of reference for what a 'big' database is



On the summoner index page, be able to click a button and update a single summoner from that page


I want to do a match timeline, but genuinely have no clue how
	My first idea would be to have each column be a timestamp (60 second increment) but I don't think you can dynamically have rows be different sizes


Current Issue -
	I can't get the queueType list to work properly - some issue with configuring the keys and properties